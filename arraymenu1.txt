import java.util.Scanner;
public class Arraymenu1 {
    Scanner s=new Scanner(System.in);
    
    int arr[]=new int[100];
    int numberOfElements=0;
    
    public void insertLast() {
        System.out.println("Enter new value");
        int value=s.nextInt();
          arr[numberOfElements]=value;
            numberOfElements++;
        
    }
    
    public void insertFirst() {
        System.out.println("Enter new value");
        int value=s.nextInt();
        if(numberOfElements==0) {
          arr[0]=value;
          numberOfElements++;
        }
        else {                 
            for(int i=numberOfElements;i>0;i--) {
                arr[i]=arr[i-1];
            }
            arr[0]=value;
            numberOfElements++;
        }
        
    }
    
    public void display() {
        for(int i=0;i<numberOfElements;i++) {
            System.out.print(arr[i]+"  ");
        }
    }
    public void insertSpecific() {
        System.out.println("Enter new value");
        int value=s.nextInt();
        System.out.println("enter index value");
        int index=s.nextInt();
        if(index<=numberOfElements) {
        for(int i=numberOfElements;i>index;i--) {
            arr[i]=arr[i-1];
          
        }
        arr[index]=value;
        numberOfElements++;
        }
        else {
            System.out.println("Invalid index");
        }
        
        
    }
     public void removeFirst() {
       
        if (numberOfElements == 0){
          }
      
        else {
      for (int i = 0; i < numberOfElements - 1; i++) {
                arr[i] = arr[i+1];
            }
            numberOfElements--;
        }
    }
    
    public void removeLast() {
        if (numberOfElements == 0){}
        else {
            numberOfElements--;
        }
    }
    
    public void removeSpecific() {
        if (numberOfElements == 0) {
          
        } else {
            System.out.println("Enter index value");
            int index = s.nextInt();
            if (index < numberOfElements) {
                for (int i = index; i < numberOfElements - 1; i++) {
                    arr[i] = arr[i+1];
                }
                numberOfElements--;
            } else {
                System.out.println("Invalid index");
            }
        }
    }
 public void removeFirstOccurance() {
    System.out.println("Enter element  :");
    int value = s.nextInt();
    int index = -1;
    for (int i = 0; i < numberOfElements; i++) {//0 1 2 3 
      if (arr[i] == value) {
        index = i;//stores
      }
    }
    if (index != -1) {
      for (int i = index; i < numberOfElements - 1; i++) {//shifting operation by decerementing it to 1
        arr[i] = arr[i + 1];
      }
      numberOfElements--;
      System.out.println("First occurence of element " + value + " removed successfully");
    } else {
      System.out.println("Element not found in the array");
    }
  }
    public void removeLastOccurance() {
    System.out.println("Enter element :");
    int value = s.nextInt();
    int index = -1;
    for (int i = numberOfElements - 1; i >= 0; i--) {// simply reverse iteration
      if (arr[i] == value) {
        index = i;//element index is stored
      }
    }
    if (index != -1) {
      for (int i = index; i < numberOfElements - 1; i++) {//shifting 
        arr[i] = arr[i + 1];
      }
      numberOfElements--;
      System.out.println("Last occurence of element " + value + "  removed successfully");
    } else {
      System.out.println("Element not found in the array");
    }
  }
  public void removeAll() {
    System.out.println("Enter the element:");
    int value = s.nextInt();
     int count= 0;
    for (int i = 0; i < numberOfElements; i++) {
      if (arr[i] == value) {
        count++;
      } else {
        arr[i- count] = arr[i];//shifted
      }
    }
    //numberOfElements-= count;
    numberOfElements=numberOfElements-count;
    System.out.println(count + "occurances of" + value + "removed successfully");
  }


    public void viewOptions() {
        int option=0;
        do {
        System.out.println("\n1. Insert first");
        System.out.println("2. Insert Last ");
        System.out.println("3. Insert specific");
        System.out.println("4. Remove first element");
        System.out.println("5. Remove last element");
        System.out.println("6. remove element from specific index");
        System.out.println("7. remove first occurance of search element");
        System.out.println("8. remove last occurance of search element");
        System.out.println("9. remove all occurances of search element");
        
        
        
        System.out.println("Choose your option :");
         option=s.nextInt();
        switch(option) {
        case 1:{
            insertFirst();
            display();
            break;
        }
        case 2: {
            insertLast();
            display();
            break;
        }
        case 3:{
            insertSpecific();
            display();
            break;
        }
        case 4:{
            removeFirst();
            display();
            break;
          }
        case 5:{
            removeLast();
            display();
            break;
        }
          case 6:{
            removeSpecific();
            display();
            break;
          }
          case 7:{
           removeFirstOccurance();
            display();
            break;
          } 
          case 8:{
            removeLastOccurance();
            display();
            break;
          }
          case 9:{
            removeAll();
            display();
            break;
          }
            
        default:{
            System.out.println("Invalid option");
        }
        }
        }
        while(option!=0);
        
    }
  public static void main(String args[]){
   
      Arraymenu1 obj=new Arraymenu1();
      obj.viewOptions();
      
  }
}
                   